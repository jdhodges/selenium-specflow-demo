Discovering target: Default
Discovering tests from assembly: C:\Dev\seleniumDemo\seleniumDemo\bin\Debug\seleniumDemo.dll
Appdomain Disposed
Test Suite Dump
#0: seleniumDemo/Default - 
#1: Default - 
#2: seleniumDemo - 
#3: TodoList - 
#6: Add todo items - 
#4: Add todo - TestAssembly:seleniumDemo/Feature:TodoList/Scenario:Add+todo
#5: Remove todo - TestAssembly:seleniumDemo/Feature:TodoList/Scenario:Remove+todo
#7: Add one todo item - TestAssembly:seleniumDemo/Feature:Add+todo+items/Scenario:Add+one+todo+item
#8: Add two todo items - TestAssembly:seleniumDemo/Feature:Add+todo+items/Scenario:Add+two+todo+items
End: Test Suite Dump -- X
Scheduler: considering #4 for thread #0
Scheduler: using #4 for thread #0
Test #4 is scheduled for thread #0
Thread #0: creating new test thread executor for seleniumDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null (target: Default)
Loading SpecRun type 'TechTalk.SpecRun.Framework.TestAssemblyExecutor' from: C:\Users\jhodges\AppData\Local\Temp\VisualStudioTestExplorerExtensions\SpecRun.Runner.1.3.0\tools\TechTalk.SpecRun.Framework.Executor.dll
Test #4/0 is started on thread #0
B:When I have entered "Hello" into the text field
T:done: AddTodoItemsSteps.WhenIHaveEnteredIntoTheTextField("Hello") (0.1s)
B:And I press enter
T:done: AddTodoItemsSteps.WhenIPressEnter() (0.0s)
B:Then there should be a new todo with text "Hello" on the screen
T:No matching step definition found for the step. Use the following code to create one:
T:        [Then(@"there should be a new todo with text ""(.*)"" on the screen")]
T:public void ThenThereShouldBeANewTodoWithTextOnTheScreen(string p0)
T:{
T:    ScenarioContext.Current.Pending();
T:}
T:Pending: No matching step definition found for one or more steps.
T:using System;
T:using TechTalk.SpecFlow;
T:namespace MyNamespace
T:{
T:    [Binding]
T:    public class StepDefinitions
T:    {
T:        [Then(@"there should be a new todo with text ""(.*)"" on the screen")]
T:public void ThenThereShouldBeANewTodoWithTextOnTheScreen(string p0)
T:{
T:    ScenarioContext.Current.Pending();
T:}
T:    }
T:}
Scheduler: considering #5 for thread #0
Scheduler: using #5 for thread #0
Test #5 is scheduled for thread #0
Test #4 is finished on thread #0 as Pending within 3.6653665 seconds
Test #5/0 is started on thread #0
B:Given I have a added a todo with the text "Hello"
T:No matching step definition found for the step. Use the following code to create one:
T:        [Given(@"I have a added a todo with the text ""(.*)""")]
T:public void GivenIHaveAAddedATodoWithTheText(string p0)
T:{
T:    ScenarioContext.Current.Pending();
T:}
B:When I remove it
T:No matching step definition found for the step. Use the following code to create one:
T:        [When(@"I remove it")]
T:public void WhenIRemoveIt()
T:{
T:    ScenarioContext.Current.Pending();
T:}
B:Then there should be no todo items displayed
T:error: Input string was not in a correct format.
Scheduler: dequeuing a rescheduled item: 5
Scheduler: considering #5 for thread #0
Scheduler: using #5 for thread #0
Test #5 is scheduled for thread #0
Test #5 is finished on thread #0 as Failed within 0.0130013 seconds
Test #5/1 is started on thread #0
B:Given I have a added a todo with the text "Hello"
T:No matching step definition found for the step. Use the following code to create one:
T:        [Given(@"I have a added a todo with the text ""(.*)""")]
T:public void GivenIHaveAAddedATodoWithTheText(string p0)
T:{
T:    ScenarioContext.Current.Pending();
T:}
B:When I remove it
T:No matching step definition found for the step. Use the following code to create one:
T:        [When(@"I remove it")]
T:public void WhenIRemoveIt()
T:{
T:    ScenarioContext.Current.Pending();
T:}
B:Then there should be no todo items displayed
T:error: Input string was not in a correct format.
Scheduler: dequeuing a rescheduled item: 5
Scheduler: considering #5 for thread #0
Scheduler: using #5 for thread #0
Test #5 is scheduled for thread #0
Test #5 is finished on thread #0 as Failed within 0.0020002 seconds
Test #5/2 is started on thread #0
B:Given I have a added a todo with the text "Hello"
T:No matching step definition found for the step. Use the following code to create one:
T:        [Given(@"I have a added a todo with the text ""(.*)""")]
T:public void GivenIHaveAAddedATodoWithTheText(string p0)
T:{
T:    ScenarioContext.Current.Pending();
T:}
B:When I remove it
T:No matching step definition found for the step. Use the following code to create one:
T:        [When(@"I remove it")]
T:public void WhenIRemoveIt()
T:{
T:    ScenarioContext.Current.Pending();
T:}
B:Then there should be no todo items displayed
T:error: Input string was not in a correct format.
Scheduler: considering #7 for thread #0
Scheduler: using #7 for thread #0
Test #7 is scheduled for thread #0
Test #5 is finished on thread #0 as Failed within 0.0020002 seconds
Test #7/0 is started on thread #0
B:When I have entered "Hello" into the text field
T:done: AddTodoItemsSteps.WhenIHaveEnteredIntoTheTextField("Hello") (0.0s)
B:And I press enter
T:done: AddTodoItemsSteps.WhenIPressEnter() (0.0s)
B:Then there should be 1 todo item with text "Hello"
T:error: Assert.AreEqual failed. Expected:<2>. Actual:<1>. 
Scheduler: dequeuing a rescheduled item: 7
Scheduler: considering #7 for thread #0
Scheduler: using #7 for thread #0
Test #7 is scheduled for thread #0
Test #7 is finished on thread #0 as Failed within 0.0810081 seconds
Test #7/1 is started on thread #0
B:When I have entered "Hello" into the text field
T:done: AddTodoItemsSteps.WhenIHaveEnteredIntoTheTextField("Hello") (0.0s)
B:And I press enter
T:done: AddTodoItemsSteps.WhenIPressEnter() (0.0s)
B:Then there should be 1 todo item with text "Hello"
T:error: Assert.AreEqual failed. Expected:<3>. Actual:<1>. 
Scheduler: dequeuing a rescheduled item: 7
Scheduler: considering #7 for thread #0
Scheduler: using #7 for thread #0
Test #7 is scheduled for thread #0
Test #7 is finished on thread #0 as Failed within 0.060006 seconds
Test #7/2 is started on thread #0
B:When I have entered "Hello" into the text field
T:done: AddTodoItemsSteps.WhenIHaveEnteredIntoTheTextField("Hello") (0.0s)
B:And I press enter
T:done: AddTodoItemsSteps.WhenIPressEnter() (0.0s)
B:Then there should be 1 todo item with text "Hello"
T:error: Assert.AreEqual failed. Expected:<4>. Actual:<1>. 
Scheduler: considering #8 for thread #0
Scheduler: using #8 for thread #0
Test #8 is scheduled for thread #0
Test #7 is finished on thread #0 as Failed within 0.0540054 seconds
Test #8/0 is started on thread #0
B:Given I have added 1 todo with the text "Hello"
T:error: Assert.AreEqual failed. Expected:<4>. Actual:<1>. 
B:When I have entered "Hello" into the text field
T:skipped because of previous errors
B:And I press enter
T:skipped because of previous errors
B:Then there should be 2 todo items displayed
T:skipped because of previous errors
Cancelling because configured number of failures reached
Test #8 is finished on thread #0 as Failed within 0.0520052 seconds
Appdomain Disposed
Total: 4 (test executions: 8)
Succeeded: 0
Ignored: 0
Pending: 1
Skipped: 0
Failed: 3
